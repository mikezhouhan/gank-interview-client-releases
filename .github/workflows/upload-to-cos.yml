name: Upload to Tencent Cloud COS

# Required GitHub Secrets:
# - TENCENT_SECRET_ID: 腾讯云API密钥ID
# - TENCENT_SECRET_KEY: 腾讯云API密钥Key
# - TENCENT_COS_BUCKET: 腾讯云存储桶名称
# - TENCENT_COS_REGION: 腾讯云存储区域 (如: ap-beijing, ap-shanghai等)
# - TENCENT_COS_DIRECTORY: 腾讯云存储目录名称 (如: releases)

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag to upload (e.g. v1.0.0)'
        required: true
        default: 'v0.0.1'

permissions:
  contents: read

jobs:
  upload-to-cos:
    runs-on: ubuntu-latest
    environment: default
    
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm install -g @tencent-cloud/cli
          npm install axios

      - name: Download release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create downloads directory
          mkdir -p downloads
          
          # Get release info
          RELEASE_INFO=$(curl -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.event.inputs.release_tag }}")
          
          # Parse and download each asset
          echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name | test("\\.(exe|dmg|zip|yml|blockmap)$")) | .browser_download_url + " " + .name' | while read url filename; do
            echo "Downloading $filename from $url"
            curl -L -H "Authorization: token $GH_TOKEN" "$url" -o "downloads/$filename"
          done
          
          # List downloaded files
          echo "Downloaded files:"
          ls -la downloads/
        
      
      - name: Configure Tencent Cloud CLI
        run: |
          # Configure Tencent Cloud CLI
          tccli configure set secretId ${{ secrets.TENCENT_SECRET_ID }}
          tccli configure set secretKey ${{ secrets.TENCENT_SECRET_KEY }}
          tccli configure set region ${{ secrets.TENCENT_COS_REGION }}

      - name: Upload to Tencent Cloud COS
        run: |
          # Install coscmd for easier file operations
          pip install coscmd
          
          # Configure coscmd
          coscmd config -a ${{ secrets.TENCENT_SECRET_ID }} -s ${{ secrets.TENCENT_SECRET_KEY }} -b ${{ secrets.TENCENT_COS_BUCKET }} -r ${{ secrets.TENCENT_COS_REGION }}
          
          # Get current timestamp for backup
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          
          # Check if the target directory exists and backup it
          echo "Checking if directory ${{ secrets.TENCENT_COS_DIRECTORY }} exists..."
          if coscmd list ${{ secrets.TENCENT_COS_DIRECTORY }}/ > /dev/null 2>&1; then
            echo "Directory ${{ secrets.TENCENT_COS_DIRECTORY }} exists, creating backup..."
            
            # Create backup by copying the entire directory
            echo "Creating backup: ${{ secrets.TENCENT_COS_DIRECTORY }}_backup_${TIMESTAMP}"
            coscmd copy -r ${{ secrets.TENCENT_COS_DIRECTORY }}/ ${{ secrets.TENCENT_COS_DIRECTORY }}_backup_${TIMESTAMP}/
            
            # Delete original directory after backup
            echo "Deleting original directory ${{ secrets.TENCENT_COS_DIRECTORY }}..."
            coscmd delete -r ${{ secrets.TENCENT_COS_DIRECTORY }}/
          else
            echo "Directory ${{ secrets.TENCENT_COS_DIRECTORY }} does not exist, proceeding with upload..."
          fi
          
          # Upload new files to TENCENT_COS_DIRECTORY
          cd downloads
          for file in *; do
            if [[ -f "$file" ]]; then
              echo "Uploading $file to ${{ secrets.TENCENT_COS_DIRECTORY }}/${{ github.event.inputs.release_tag }}/$file"
              coscmd upload "$file" "${{ secrets.TENCENT_COS_DIRECTORY }}/${{ github.event.inputs.release_tag }}/$file"
            fi
          done
          
          echo "Upload completed successfully!"
          echo "Files uploaded to: ${{ secrets.TENCENT_COS_DIRECTORY }}/${{ github.event.inputs.release_tag }}/"
          echo "Backup directory (if created): ${{ secrets.TENCENT_COS_DIRECTORY }}_backup_${TIMESTAMP}"